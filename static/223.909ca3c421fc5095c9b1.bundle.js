webpackJsonp([223],{1734:function(module,exports){module.exports="import React from 'react';\nimport RadioButton from './RadioButton';\nimport radioButtonDriverFactory from './RadioButton.driver';\nimport {createDriverFactory} from '../../test-common';\nimport {radioButtonTestkitFactory} from '../../../testkit';\nimport {isTestkitExists, isEnzymeTestkitExists} from '../../../testkit/test-common';\nimport {radioButtonTestkitFactory as enzymeRadioButtonTestkitFactory} from '../../../testkit/enzyme';\n\ndescribe('RadioButton', () => {\n  const createDriver = createDriverFactory(radioButtonDriverFactory);\n\n  it('should have a label', () => {\n    const label = 'myLabel';\n    const driver = createDriver(<RadioButton value=\"1\">{label}</RadioButton>);\n    expect(driver.getLabel()).toBe(label);\n  });\n\n  it('should be disabled', () => {\n    const driver = createDriver(<RadioButton value=\"1\" disabled/>);\n    expect(driver.isDisabled()).toBe(true);\n  });\n\n  it('should be checked', () => {\n    const driver = createDriver(<RadioButton value=\"1\" checked/>);\n    expect(driver.isChecked()).toBe(true);\n  });\n\n  it('should call onChange', () => {\n    const onChange = jest.fn();\n    const value = 1;\n    const driver = createDriver(<RadioButton value={value} onChange={onChange}/>);\n    driver.check();\n    expect(onChange).toBeCalledWith(value);\n  });\n\n  it('should not call onChange if already checked', () => {\n    const onChange = jest.fn();\n    const value = 1;\n    const driver = createDriver(<RadioButton value={value} onChange={onChange} checked/>);\n    driver.check();\n    expect(onChange).not.toBeCalledWith(value);\n  });\n\n  it('should not call onChange if disabled', () => {\n    const onChange = jest.fn();\n    const value = 1;\n    const driver = createDriver(<RadioButton value={value} onChange={onChange} disabled/>);\n    driver.check();\n    expect(onChange).not.toBeCalledWith(value);\n  });\n\n  describe('testkit', () => {\n    it('should exist', () => {\n      expect(isTestkitExists(<RadioButton/>, radioButtonTestkitFactory)).toBe(true);\n    });\n  });\n\n  describe('enzyme testkit', () => {\n    it('should exist', () => {\n      expect(isEnzymeTestkitExists(<RadioButton/>, enzymeRadioButtonTestkitFactory)).toBe(true);\n    });\n  });\n});\n"}});