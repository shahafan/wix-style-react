webpackJsonp([146],{1811:function(module,exports){module.exports="import React from 'react';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport Label from './Label';\nimport {tpaLabelTestkitFactory as labelTestkitFactory} from '../../../testkit';\n\ndescribe('Label', () => {\n  it('should exist', () => {\n    const div = document.createElement('div');\n    const dataHook = 'Label-hook';\n    const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n      <div>\n        <Label dataHook={dataHook}/>\n      </div>\n    ));\n    const labelTestkit = labelTestkitFactory({wrapper, dataHook});\n    expect(labelTestkit.exists()).toBeTruthy();\n  });\n\n  it('should contain passed text', () => {\n    const div = document.createElement('div');\n    const dataHook = 'Label-hook';\n    const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n      <div>\n        <Label dataHook={dataHook}>\n          some text\n        </Label>\n      </div>\n    ));\n    const labelTestkit = labelTestkitFactory({wrapper, dataHook});\n    expect(labelTestkit.getContent()).toEqual('some text');\n  });\n\n  it('should contain passed dom element', () => {\n    const div = document.createElement('div');\n    const dataHook = 'Label-hook';\n    const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n      <div>\n        <Label dataHook={dataHook}>\n          <span>some text</span>\n        </Label>\n      </div>\n    ));\n    const labelTestkit = labelTestkitFactory({wrapper, dataHook});\n    expect(labelTestkit.getContent()).toEqual('<span>some text</span>');\n  });\n\n  it('should contain passed dom element', () => {\n    const div = document.createElement('div');\n    const dataHook = 'Label-hook';\n    const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n      <div>\n        <Label for=\"some-id\" dataHook={dataHook}>\n          <span>some text</span>\n        </Label>\n      </div>\n    ));\n    const labelTestkit = labelTestkitFactory({wrapper, dataHook});\n    expect(labelTestkit.getAttribute('for')).toEqual('some-id');\n  });\n  it('should contain passed dom element', () => {\n    const div = document.createElement('div');\n    const dataHook = 'Label-hook';\n    const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n      <div>\n        <Label for=\"some-id\" dataHook={dataHook}>\n          <span>some text</span>\n        </Label>\n      </div>\n    ));\n    const labelTestkit = labelTestkitFactory({wrapper, dataHook});\n    expect(labelTestkit.getAttribute('data-hook')).toEqual('Label-hook');\n  });\n\n  it('should contain custom class name', () => {\n    const div = document.createElement('div');\n    const dataHook = 'Label-hook';\n    const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n      <div>\n        <Label for=\"some-id\" labelClassName=\"customLabelStyle\" dataHook={dataHook}>\n          <span>some text</span>\n        </Label>\n      </div>\n    ));\n    const labelTestkit = labelTestkitFactory({wrapper, dataHook});\n    expect(labelTestkit.hasClass('customLabelStyle')).toBeTruthy();\n  });\n\n});\n"}});