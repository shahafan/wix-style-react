webpackJsonp([460],{1497:function(module,exports){module.exports="import React from 'react';\nimport RangeInputWithLabelComposite from './RangeInputWithLabelComposite';\nimport Label from '../../Label';\nimport Input from '../../Input';\nimport rangeCompositeDriverFactory from './RangeWithLabelComposite.driver';\nimport {createDriverFactory} from '../../test-common';\n\ndescribe('RangeInputWithLabelComposite', () => {\n  const createRangeCompositeDriver = createDriverFactory(rangeCompositeDriverFactory);\n\n  it('should remove label wrapping when label not given', () => {\n    const driver = createRangeCompositeDriver(<RangeInputWithLabelComposite><Input/><Input/></RangeInputWithLabelComposite>);\n    expect(driver.hasLabel()).toBe(false);\n    expect(driver.getNumberOfChildren()).toBe(2);\n  });\n\n  it('should render Label with 2 Inputs', () => {\n    const driver = createRangeCompositeDriver(<RangeInputWithLabelComposite><Label>myLabel</Label><Input/><Input/></RangeInputWithLabelComposite>);\n    expect(driver.hasLabel()).toBe(true);\n    expect(driver.getLabel()).toBe('myLabel');\n    expect(driver.hasInputs()).toBe(true);\n  });\n\n  describe('label attributes', () => {\n    it('should FieldLabelAttributes not exists if all attributes empty or false', () => {\n      const driver = createRangeCompositeDriver(<RangeInputWithLabelComposite><Label>myLabel</Label><Input/><Input/></RangeInputWithLabelComposite>);\n\n      expect(driver.hasFieldLabelAttributes()).toBe(false);\n    });\n\n    it('should FieldLabelAttributes exists if required', () => {\n      const driver = createRangeCompositeDriver(<RangeInputWithLabelComposite required><Label>myLabel</Label><Input/><Input/></RangeInputWithLabelComposite>);\n\n      expect(driver.hasFieldLabelAttributes()).toBe(true);\n    });\n\n    it('should FieldLabelAttributes exists if info', () => {\n      const driver = createRangeCompositeDriver(<RangeInputWithLabelComposite info=\"info\"><Label>myLabel</Label><Input/><Input/></RangeInputWithLabelComposite>);\n\n      expect(driver.hasFieldLabelAttributes()).toBe(true);\n    });\n  });\n\n});\n"}});