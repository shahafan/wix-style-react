webpackJsonp([483],{1474:function(module,exports){module.exports="import React from 'react';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport checkboxDriverFactory from './Checkbox.driver';\nimport {createDriverFactory} from '../test-common';\nimport {checkboxTestkitFactory} from '../../testkit';\nimport Checkbox from './Checkbox';\nimport {checkboxTestkitFactory as enzymeCheckboxTestkitFactory} from '../../testkit/enzyme';\nimport {mount} from 'enzyme';\n\ndescribe('Checkbox', () => {\n  const createDriver = createDriverFactory(checkboxDriverFactory);\n\n  it('should be unchecked and not disabled by default', () => {\n    const driver = createDriver(<Checkbox/>);\n    expect(driver.isChecked()).toBeFalsy();\n    expect(driver.isDisabled()).toBeFalsy();\n  });\n\n  it('should be checked', () => {\n    const driver = createDriver(<Checkbox checked/>);\n    expect(driver.isChecked()).toBeTruthy();\n  });\n\n  it('should be disabled', () => {\n    const driver = createDriver(<Checkbox disabled/>);\n    expect(driver.isDisabled()).toBeTruthy();\n  });\n\n  it('should have an error state', () => {\n    const driver = createDriver(<Checkbox hasError/>);\n    expect(driver.hasError()).toBeTruthy();\n  });\n\n  it('should have a label', () => {\n    const driver = createDriver(<Checkbox disabled>Hey</Checkbox>);\n    expect(driver.getLabel()).toBe('Hey');\n  });\n\n  it('should call onChange when clicking the Checkbox', () => {\n    const onChange = jest.fn();\n\n    const driver = createDriver(<Checkbox onChange={onChange}/>);\n\n    driver.click();\n    expect(onChange).toBeCalled();\n  });\n\n  it('should not call onChange when clicking disabled Checkbox', () => {\n    const onChange = jest.fn();\n\n    const driver = createDriver(<Checkbox onChange={onChange} disabled/>);\n\n    driver.click();\n    expect(onChange).not.toBeCalled();\n  });\n\n  it('should not run in indeterminate mode when not specified', () => {\n    const driver = createDriver(<Checkbox/>);\n\n    expect(driver.isIndeterminate()).toBeFalsy();\n  });\n\n  it('should run in indeterminate mode when specified', () => {\n    const driver = createDriver(<Checkbox indeterminate/>);\n\n    expect(driver.isIndeterminate()).toBeTruthy();\n  });\n\n  describe('testkit', () => {\n    it('should exist', () => {\n      const div = document.createElement('div');\n      const dataHook = 'myDataHook';\n      const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(<div><Checkbox dataHook={dataHook}/></div>));\n      const checkboxTestkit = checkboxTestkitFactory({wrapper, dataHook});\n      expect(checkboxTestkit.exists()).toBeTruthy();\n    });\n  });\n\n  describe('enzyme testkit', () => {\n    it('should exist', () => {\n      const dataHook = 'myDataHook';\n      const wrapper = mount(<Checkbox dataHook={dataHook}/>);\n      const checkboxTestkit = enzymeCheckboxTestkitFactory({wrapper, dataHook});\n      expect(checkboxTestkit.exists()).toBeTruthy();\n    });\n  });\n});\n"}});