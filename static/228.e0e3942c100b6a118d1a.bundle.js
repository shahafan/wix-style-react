webpackJsonp([228],{1729:function(module,exports){module.exports="const popoverMenuDriverFactory = component => {\n  let menuItemDataHook;\n  const itemsArray = () => $$(\n    menuItemDataHook.split(' ').reduce((q, hook) => q + `[data-hook~=\"${hook}\"]`, '')\n  );\n  const itemAt = index => itemsArray().get(index);\n  // before accessing menu methods one need to init driver with menu-item data hook\n  const protect = fn => (...args) => {\n    if (!menuItemDataHook) {\n      throw new Error('Before accessing menu fields init menu item data hook with \"driver.given.menuItemDataHook(\\'myDataHook\\')\" command');\n    }\n\n    return fn(...args);\n  };\n\n  const driver = {\n    exists: () => component.isPresent(),\n    click: () => component.click(),\n    element: () => component,\n\n    init: {\n      menuItemDataHook: dataHook => {\n        menuItemDataHook = dataHook;\n\n        return driver;\n      }\n    },\n\n    menu: {\n      isShown: protect(() => driver.menu.element().isDisplayed()),\n      itemsLength: protect(() => itemsArray().count()),\n      itemContentAt: protect(index => itemAt(index).$$('button >span').get(1).getText()),\n      clickItemAt: protect(index => itemAt(index).click()),\n\n      // menu items parent node (not actual menu root)\n      element: protect(() => itemAt(0).element(by.xpath('..')))\n    }\n  };\n\n  return driver;\n};\n\nexport default popoverMenuDriverFactory;\n"}});