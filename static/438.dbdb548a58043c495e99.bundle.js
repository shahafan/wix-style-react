webpackJsonp([438],{1519:function(module,exports){module.exports="import React from 'react';\nimport ReactDOM from 'react-dom';\nimport inputDriverFactory from '../../Input/Input.driver';\nimport buttonDriverFactory from '../../Backoffice/Button/Button.driver';\nimport $ from 'jquery';\n\nconst editableRowDriverFactory = ({element, wrapper, component}) => {\n  const el = $(element);\n  const inputDriver = inputDriverFactory({element: el.find('[data-hook=\"edit-row-input\"]')[0], wrapper: element});\n  const approveBtnDriver = buttonDriverFactory({element: el.find('[data-hook=\"edit-row-approve-button\"]')[0], wrapper: element});\n  const cancelBtnDriver = buttonDriverFactory({element: el.find('[data-hook=\"edit-row-cancel-button\"]')[0], wrapper: element});\n\n  return {\n    exists: () => !!element,\n    isInputFocused: () => inputDriver.isFocus(),\n    clickApprove: () => approveBtnDriver.click(),\n    isApproveDisabled: () => approveBtnDriver.isButtonDisabled(),\n    clickCancel: () => cancelBtnDriver.click(),\n    getText: () => inputDriver.getValue(),\n    setText: text => inputDriver.enterText(text),\n    keyDown: keyCode => inputDriver.trigger('keyDown', {keyCode}),\n    setProps: props => {\n      const ClonedWithProps = React.cloneElement(component, Object.assign({}, component.props, props), ...(component.props.children || []));\n      ReactDOM.render(<div ref={r => element = r}>{ClonedWithProps}</div>, wrapper);\n    }\n  };\n};\n\nexport default editableRowDriverFactory;\n\n"}});