webpackJsonp([138],{1819:function(module,exports){module.exports="import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport Tabs from './Tabs';\nimport styles from './Tabs.scss';\n\nconst tabsDriverFactory = ({element, wrapper, component}) => {\n  const getTabs = () => [...element.childNodes];\n  return {\n    exists: () => !!element,\n    getTitles: () => getTabs().map(childNode => childNode.textContent),\n    clickTabAt: index => ReactTestUtils.Simulate.click(getTabs()[index]),\n    getActiveTabIndex: () => getTabs().findIndex(childNode => childNode.classList.contains(styles.active)),\n    isDefaultType: () => Tabs.tabTypes.every(tabType => !element.classList.contains(styles[tabType])),\n    isOfType: type => element.classList.contains(styles[type]),\n    hasDivider: () => element.classList.contains(styles.hasDivider),\n    getTabsWidth: () => new Set(getTabs().map(item => item.style.width)),\n    setProps: props => {\n      const ClonedWithProps = React.cloneElement(component, Object.assign({}, component.props, props), ...(component.props.children || []));\n      ReactDOM.render(<div ref={r => element = r.childNodes[0]}>{ClonedWithProps}</div>, wrapper);\n    }\n  };\n};\n\nexport default tabsDriverFactory;\n"}});