webpackJsonp([282],{1675:function(module,exports){module.exports="import React from 'react';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport inputDriverFactory from '../Input/Input.driver';\nimport dropdownLayoutDriverFactory from '../DropdownLayout/DropdownLayout.driver';\nimport ReactDOM from 'react-dom';\n\nconst inputWithOptionsDriverFactory = ({element, wrapper, component}) => {\n\n  const inputWrapper = element.childNodes[0];\n  const inputDriver = inputDriverFactory({element: inputWrapper.childNodes[0], wrapper: inputWrapper});\n  const dropdownLayoutDriver = dropdownLayoutDriverFactory({element: element.childNodes[1].childNodes[0], wrapper});\n\n  const driver = {\n    exists: () => !!element,\n    inputWrapper: () => inputWrapper,\n    focus: () => inputDriver.focus(),\n    blur: () => dropdownLayoutDriver.mouseClickOutside(),\n    pressDownKey: () => ReactTestUtils.Simulate.keyDown(inputWrapper, {key: 'ArrowDown'}),\n    pressUpKey: () => ReactTestUtils.Simulate.keyDown(inputWrapper, {key: 'ArrowUp'}),\n    pressAnyKey: () => ReactTestUtils.Simulate.keyDown(inputWrapper, {key: 'Any'}),\n    pressEnterKey: () => ReactTestUtils.Simulate.keyDown(inputWrapper, {key: 'Enter'}),\n    pressTabKey: () => ReactTestUtils.Simulate.keyDown(inputWrapper, {key: 'Tab'}),\n    pressEscKey: () => ReactTestUtils.Simulate.keyDown(inputWrapper, {key: 'Escape'}),\n    outsideClick: () => document.body.dispatchEvent(new Event('click', {cancelable: true})),\n    setProps: props => {\n      const ClonedWithProps = React.cloneElement(component, Object.assign({}, component.props, props), ...(component.props.children || []));\n      ReactDOM.render(<div ref={r => element = r}>{ClonedWithProps}</div>, wrapper);\n    }\n  };\n  return {\n    exists: () => driver.exists(),\n    driver,\n    inputDriver,\n    dropdownLayoutDriver\n  };\n};\n\nexport default inputWithOptionsDriverFactory;\n"}});