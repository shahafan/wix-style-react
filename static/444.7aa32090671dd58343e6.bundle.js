webpackJsonp([444],{1513:function(module,exports){module.exports="import classNames from 'classnames';\nimport isUndefined from 'lodash/isUndefined';\nimport InputWithOptions from '../InputWithOptions/InputWithOptions';\nimport styles from './Dropdown.scss';\n\nclass Dropdown extends InputWithOptions {\n\n  constructor(props) {\n    super(props);\n    this.update(props, {isFirstTime: true});\n  }\n\n  update(props, {isFirstTime}) {\n    let value = '', selectedId = -1;\n    if (!isUndefined(props.selectedId)) {\n      const option = props.options.find(option => {\n        return option.id === props.selectedId;\n      });\n\n      if (option) {\n        value = props.valueParser(option);\n        selectedId = option.id;\n      }\n    }\n\n    if (isFirstTime) {\n      this.state = {value, selectedId};\n    } else {\n      this.setState({value, selectedId});\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.update(nextProps, {isFirstTime: false});\n  }\n\n  inputClasses() {\n    const classes = {[styles.readOnly]: true};\n    classes[styles.noRightBorderRadius] = this.props.noRightBorderRadius;\n    classes[styles.noBorder] = this.props.noBorder;\n    return classNames(classes);\n  }\n\n  dropdownAdditionalProps() {\n    return {selectedId: this.state.selectedId, value: this.state.value};\n  }\n\n  inputAdditionalProps() {\n    return {readOnly: true, value: this.state.value};\n  }\n\n  _onSelect(option) {\n    this.setState({value: this.props.valueParser(option), selectedId: option.id});\n    super._onSelect(option);\n  }\n}\n\nDropdown.propTypes = InputWithOptions.propTypes;\nDropdown.defaultProps = InputWithOptions.defaultProps;\n\nexport default Dropdown;\n"}});