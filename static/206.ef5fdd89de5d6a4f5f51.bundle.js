webpackJsonp([206],{1751:function(module,exports){module.exports="import {Raw} from 'slate';\nimport htmlSerializer from './htmlSerializer';\n\ndescribe('HTML serializer', () => {\n  it('should correctly deserialize HTML string', () => {\n    const text = `<p>Hello<strong>bold text</strong><em>italic<u>and underlined</u></em></p><ol><li>one</li><li>two</li></ol><p><a href=\"http://localhost\">Link to localhost</a></p>`;\n    const expected = {\n      nodes: [\n        {\n          kind: 'block',\n          type: 'paragraph',\n          nodes: [\n            {\n              kind: 'text',\n              ranges: [\n                {\n                  text: 'Hello'\n                },\n                {\n                  text: 'bold text',\n                  marks: [\n                    {type: 'bold'}\n                  ]\n                },\n                {\n                  text: 'italic',\n                  marks: [\n                    {type: 'italic'}\n                  ]\n                },\n                {\n                  text: 'and underlined',\n                  marks: [\n                    {type: 'underline'},\n                    {type: 'italic'}\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          kind: 'block',\n          type: 'ordered-list',\n          nodes: [\n            {\n              kind: 'block',\n              type: 'list-item',\n              nodes: [\n                {\n                  kind: 'text',\n                  text: 'one'\n                }\n              ]\n            },\n            {\n              kind: 'block',\n              type: 'list-item',\n              nodes: [\n                {\n                  kind: 'text',\n                  text: 'two'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          kind: 'block',\n          type: 'paragraph',\n          nodes: [\n            {kind: 'text', text: ''},\n            {\n              kind: 'inline',\n              type: 'link',\n              data: {\n                href: 'http://localhost'\n              },\n              nodes: [\n                {\n                  kind: 'text',\n                  text: 'Link to localhost'\n                }\n              ]\n            },\n            {kind: 'text', text: ''}\n          ]\n        }\n      ]\n    };\n\n    const deserialized = htmlSerializer.deserialize(text);\n    expect(Raw.serialize(deserialized, {terse: true})).toEqual(expected);\n  });\n\n  it('should correctly serialize slate object to HTML string', () => {\n    const expected = `<ul><li>one</li><li>two</li></ul><p>Text here<strong>bold text</strong><em>italic</em><em><u>and underlined</u></em><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://localhost\">Link</a></p>`;\n    const state = {\n      nodes: [\n        {\n          kind: 'block',\n          type: 'unordered-list',\n          nodes: [\n            {\n              kind: 'block',\n              type: 'list-item',\n              nodes: [\n                {\n                  kind: 'text',\n                  text: 'one'\n                }\n              ]\n            },\n            {\n              kind: 'block',\n              type: 'list-item',\n              nodes: [\n                {\n                  kind: 'text',\n                  text: 'two'\n                }\n              ]\n            }\n          ]\n        },\n        {\n          kind: 'block',\n          type: 'paragraph',\n          nodes: [\n            {\n              kind: 'text',\n              ranges: [\n                {\n                  text: 'Text here'\n                },\n                {\n                  text: 'bold text',\n                  marks: [\n                    {type: 'bold'}\n                  ]\n                },\n                {\n                  text: 'italic',\n                  marks: [\n                    {type: 'italic'}\n                  ]\n                },\n                {\n                  text: 'and underlined',\n                  marks: [\n                    {type: 'underline'},\n                    {type: 'italic'}\n                  ]\n                }\n              ]\n            },\n            {\n              kind: 'inline',\n              type: 'link',\n              data: {\n                href: 'http://localhost'\n              },\n              nodes: [\n                {\n                  kind: 'text',\n                  text: 'Link'\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    };\n    const serialized = Raw.deserialize(state, {terse: true});\n    expect(htmlSerializer.serialize(serialized)).toEqual(expected);\n  });\n});\n"}});