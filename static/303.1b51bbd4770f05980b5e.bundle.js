webpackJsonp([303],{1654:function(module,exports){module.exports="import React from 'react';\nimport ImageViewer from './ImageViewer';\nimport ImageViewerDriverFactory from './ImageViewer.driver';\nimport {createDriverFactory} from '../test-common';\nimport {imageViewerTestkitFactory} from '../../testkit';\nimport {imageViewerTestkitFactory as enzymeImageViewerTestkitFactory} from '../../testkit/enzyme';\nimport {mount} from 'enzyme';\nimport ReactTestUtils from 'react-dom/test-utils';\n\ndescribe('ImageViewer', () => {\n\n  const createDriver = createDriverFactory(ImageViewerDriverFactory);\n  let props, driver;\n  const IMAGE_URL = 'some-image-url.png';\n  const addImage = jest.fn();\n  const updateImage = jest.fn();\n  const removeImage = jest.fn();\n\n  describe('when default scenario', () => {\n    beforeEach(() => {\n      props = {\n        imageUrl: IMAGE_URL,\n        onAddImage: addImage,\n        onUpdateImage: updateImage,\n        onRemoveImage: removeImage\n      };\n      driver = createDriver(<ImageViewer {...props}/>);\n    });\n\n    it('should display image url', () => {\n      expect(driver.getImageUrl()).toBe(IMAGE_URL);\n    });\n\n    it('should trigger add image', () => {\n      driver.clickAdd();\n      expect(addImage).toBeCalled();\n    });\n\n    it('should trigger update image', () => {\n      driver.clickUpdate();\n      expect(updateImage).toBeCalled();\n    });\n\n    it('should trigger remove image', () => {\n      driver.clickRemove();\n      expect(removeImage).toBeCalled();\n    });\n\n  });\n\n  it('should not display image if not exists', () => {\n    props = {\n      imageUrl: ''\n    };\n    driver = createDriver(<ImageViewer {...props}/>);\n    expect(driver.isImageVisible()).toBeFalsy();\n  });\n\n  describe('testkit', () => {\n    it('should exist', () => {\n      const div = document.createElement('div');\n      const dataHook = 'myDataHook';\n      const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(<div><ImageViewer dataHook={dataHook}/></div>));\n      const imageViewerTestkit = imageViewerTestkitFactory({wrapper, dataHook});\n      expect(imageViewerTestkit.exists()).toBeTruthy();\n    });\n  });\n\n  describe('enzyme testkit', () => {\n    it('should exist', () => {\n      const dataHook = 'myDataHook';\n      const wrapper = mount(<ImageViewer dataHook={dataHook}/>);\n      const imageViewerTestkit = enzymeImageViewerTestkitFactory({wrapper, dataHook});\n      expect(imageViewerTestkit.exists()).toBeTruthy();\n    });\n  });\n\n});\n"}});