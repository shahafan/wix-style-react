webpackJsonp([478],{1479:function(module,exports){module.exports="import React from 'react';\nimport color from 'color';\nimport {object, func} from 'prop-types';\nimport mapValues from 'lodash/mapValues';\n\nimport WixComponent from '../BaseComponents/WixComponent';\nimport Input from '../Input';\n\nimport css from './color-picker-converter.scss';\n\nexport default class ColorPickerConverterRgb extends WixComponent {\n\n  static propTypes = {\n    current: object.isRequired,\n    onChange: func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = mapValues(props.current.rgb().object(), Math.round);\n  }\n\n  render() {\n    return (\n      <div className={css.root}>\n        <div className={css.distribute}>\n          <Input size=\"small\" value={this.state.r} onChange={e => this.change('r', e)}/>\n          <Input size=\"small\" value={this.state.g} onChange={e => this.change('g', e)}/>\n          <Input size=\"small\" value={this.state.b} onChange={e => this.change('b', e)}/>\n        </div>\n      </div>\n    );\n  }\n\n  componentWillReceiveProps(props) {\n    this.setState(mapValues(props.current.rgb().object(), Math.round));\n  }\n\n  change(part, {target: {value}}) {\n    this.setState({[part]: value}, () => {\n      const color = safeColor(this.state);\n      if (color) {\n        this.props.onChange(color);\n      }\n    });\n  }\n\n}\n\nfunction safeColor(input) {\n  try {\n    return color(input);\n  } catch (error) {\n    return null;\n  }\n}\n"}});