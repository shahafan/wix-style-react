webpackJsonp([274],{1683:function(module,exports){module.exports="# Label Testkits\n\n> Label\n\n## Label TestKit API\n\n| method | arguments | returned value | description |\n|--------|-----------|----------------|-------------|\n| getLabelText | - | string | returns Label element text |\n| getAssociatedInput | - | element | returns Label associated input element |\n| getClassList | - | string | returns the list of classes that Label element has |\n| click | - | - | clicks on the label |\n| exists (Only in Unit Test) | - | bool | fulfilled if element in the DOM |\n| element (Only in E2E) | - | element | returns the driver element |\n\n## Usage Example\n\n> Unit testing example\n\n```javascript\n  import React from 'react';\n  import {labelTestkitFactory} from 'wix-style-react/dist/testkit';\n  import {labelTestkitFactory as enzymeLabelTestkitFactory} from 'wix-style-react/dist/testkit/enzyme';\n\n  /***************\n   enzyme example\n  ***************/\n\n  const dataHook = 'myDataHook';\n  const wrapper = mount(<div/><Label dataHook={dataHook}/></div>);\n  const testkit = enzymeLabelTestkitFactory({wrapper, dataHook});\n\n  //Do tests\n  expect(testkit.exists()).toBeTruthy();\n\n  /**********************\n   ReactTestUtils example\n  **********************/\n\n  const div = document.createElement('div');\n  const dataHook = 'myDataHook';\n  const wrapper = div.appendChild(\n    ReactTestUtils.renderIntoDocument(<div/><Label dataHook={dataHook}/></div>, {dataHook})\n  );\n  const testkit = labelTestkitFactory({wrapper, dataHook});\n\n  //Do tests\n  expect(testkit.exists()).toBeTruthy();\n```\n> E2E example\n\n```javascript\n  //Element should be rendered with a data-hook into the DOM\n  <Label dataHook='myDataHook'/>\n\n  /*******************\n   protractor example\n  *******************/\n\n  import {labelTestkitFactory, waitForVisibilityOf} from 'wix-style-react/dist/testkit/protractor';\n\n  //Create an element testkit via the data-hook attribute\n  const testkit = labelTestkitFactory({dataHook: 'myDataHook'});\n\n  browser.get(appUrl); //Your application url\n\n  waitForVisibilityOf(testkit.element(), 'Cannot find Label')\n     .then(() => {\n        //Do tests\n        expect(testkit.element().isDisplayed()).toBeTruthy();\n     });\n\n```\n"}});