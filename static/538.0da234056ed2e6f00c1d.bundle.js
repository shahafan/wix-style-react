webpackJsonp([538],{1419:function(module,exports){module.exports="# Tooltip component\n\n> General tooltip and popover component.\n\n## Tooltip TestKit API\n\n### Polyfills\n\nTooltip driver might need polyfills, two polyfills are supported via the library\n```javascript\nimport 'wix-style-react/dist/src/Backoffice/Tooltip/RangePolyfill.js';\nimport 'wix-style-react/dist/src/Backoffice/Tooltip/CancelAnimationPolyfill.js';\n```\n\n### Enzyme / ReactTestUtils\n| method | arguments | returned value | description |\n|--------|-----------|----------------|-------------|\n| isShown | - | boolean | true when to tooltip itself is visible |\n| focus | - | - | focus on the tooltip element |\n| blue | - | - | blur the tooltip element |\n| click | - | - | click on the tooltip element |\n| mouseEnter | - | - | simulate mouse enter the tooltip element |\n| mouseLeave | - | - | simulate mouse leave the tooltip element |\n| hasErrorTheme | - | boolean | true if the tooltip itself uses error theme | \n| hasDarkTheme | - | boolean | true if the tooltip itself uses dark theme | \n| hasLightTheme | - | boolean | true if the tooltip itself uses light theme | \n| getTooltipWrapper | - | element | return the wrapper that wraps the tooltip itself and the tooltip element | \n| getChildren | - | element | return the tooltip children | \n| getPlacement | - | string | return the tooltip placement | \n| getContent | - | element | return the tooltip content | \n\n## Usage Example\n\n> Unit testing example\n\n```javascript\n  import React from 'react';\n  import {backofficeTooltipTestkitFactory as tooltipTestkitFactory} from 'wix-style-react/dist/testkit';\n  import {backofficeTooltipTestkitFactory as enzymeTooltipTestkitFactory} from 'wix-style-react/dist/testkit/enzyme';\n  import waitForCond from 'wait-for-cond';\n\n  function waitFor(predicate, msg) {\n    return waitForCond(predicate, 2000, msg);\n  }\n\n  /***************\n   enzyme example\n  ***************/\n\n  const dataHook = 'myDataHook';\n  const wrapper = mount(<Tooltip dataHook={dataHook} {..._props}>{children}</Tooltip>);\n  const testkit = enzymeTooltipTestkitFactory({wrapper, dataHook});\n\n  //Do tests\n  testkit.mouseEnter();\n  expect(testkit.isShown()).toBeFalsy();\n  return waitFor.assert(() => expect(testkit.isShown()).toBeTruthy());\n\n  /**********************\n   ReactTestUtils example\n  **********************/\n\n  const div = document.createElement('div');\n  const dataHook = 'myDataHook';\n  const wrapper = div.appendChild(\n    ReactTestUtils.renderIntoDocument(<div><Tooltip dataHook={dataHook} {..._props}>{children}</Tooltip></div>)\n  );\n  const testkit = tooltipTestkitFactory({wrapper, dataHook});\n  \n  //Do tests\n  testkit.mouseEnter();\n  expect(testkit.isShown()).toBeFalsy();\n  return waitFor.assert(() => expect(testkit.isShown()).toBeTruthy());\n```\n"}});