webpackJsonp([193],{1764:function(module,exports){module.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport WixComponent from '../BaseComponents/WixComponent';\nimport Checkbox from '../Checkbox';\nimport RadioButton from '../RadioGroup/RadioButton/RadioButton';\nimport Image from './Image';\nimport Text from '../Text';\nimport styles from './Selector.scss';\nimport ExtraText from './ExtraText';\nimport ExtraIcon from './ExtraIcon';\nimport ProgressBar from './ProgressBar';\n\nconst toggleStyle = {\n  display: 'inline-block'\n};\n\nconst imageStyle = {\n  marginLeft: '2px',\n  marginRight: '10px',\n  display: 'flex'\n};\n\nclass Selector extends WixComponent {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    isSelected: PropTypes.bool,\n    image: PropTypes.string,\n    subTitle: PropTypes.string,\n    onToggle: PropTypes.func,\n    toggleType: PropTypes.oneOf(['checkbox', 'radio'])\n  };\n\n  static defaultProps = {\n    isSelected: false,\n    toggleType: 'checkbox'\n  };\n\n  state = {\n    checked: false\n  };\n\n  toggle = id => {\n    this.props.onToggle && this.props.onToggle(id);\n  };\n\n  render() {\n    const {\n      imageSize,\n      imageSrc,\n      title,\n      subTitle,\n      isSelected,\n      id,\n      children,\n      toggleType\n    } = this.props;\n    let toggle;\n    if (toggleType === 'checkbox') {\n      toggle = <Checkbox dataHook=\"toggle\" style={toggleStyle} checked={isSelected} onChange={() => this.toggle(id)}/>;\n    } else {\n      toggle = <RadioButton dataHook=\"toggle\" style={toggleStyle} checked={isSelected} onChange={() => this.toggle(id)}/>;\n    }\n    return (\n      <div\n        className={styles.selector}\n        onClick={() => this.toggle(id)}\n        >\n        <div className={styles.main}>\n          {toggle}\n          {imageSrc ? <div style={imageStyle}><Image imageSrc={imageSrc} imageSize={imageSize}/></div> : ''}\n          <span>\n            <div data-hook=\"title\"><Text appearance=\"T1\">{title}</Text></div>\n            {subTitle ? <div data-hook=\"subtitle\"><Text appearance=\"T3\">{subTitle}</Text></div> : ''}\n          </span>\n        </div>\n        <div className={styles.extra}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nSelector.ExtraText = ExtraText;\nSelector.ExtraIcon = ExtraIcon;\nSelector.ProgressBar = ProgressBar;\n\nexport default Selector;\n"}});