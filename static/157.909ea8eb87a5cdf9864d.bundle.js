webpackJsonp([157],{1800:function(module,exports){module.exports="import floatingTabItemDriverFactory from '../FloatingTabItem/FloatingTabItem.driver';\nimport buttonDriverFactory from '../Button/Button.driver';\n\nconst floatingTabsDriverFactory = ({element}) => {\n  const containers = Array.from(element.childNodes).map(container => {\n    return floatingTabItemDriverFactory({element: container});\n  });\n\n  const getButtonById = id => element.querySelector(`[data-hook=\"floating-tab-item-button-${id}\"]`);\n\n  return {\n    exists: () => !!element,\n    // clickOnTabAt: index => buttonDrivers[index].click(),\n    activeContent: () => {\n      const activeContent = containers.find(c => c.isActive());\n      if (activeContent) {\n        return activeContent.content();\n      }\n      return null;\n    },\n    activeTitle: () => {\n      const activeContent = containers.find(c => c.isActive());\n      if (activeContent) {\n        return activeContent.content();\n      }\n      return null;\n    },\n    isButtonByIdExists: id => !!getButtonById(id),\n    getButtonTextById: id => getButtonById(id).textContent,\n    isButtonActive: id => {\n      const button = getButtonById(id);\n\n      if (button) {\n        const buttonFactory = buttonDriverFactory({element: button});\n        return buttonFactory.hasTheme('fill');\n      }\n      return undefined;\n    },\n    isButtonHasClass: (id, className) => {\n      const button = getButtonById(id);\n\n      if (button) {\n        const buttonFactory = buttonDriverFactory({element: button});\n        return buttonFactory.hasClass(className);\n      }\n      return undefined;\n    },\n    clickButtonById: id => {\n      const button = getButtonById(id);\n      if (button) {\n        const buttonFactory = buttonDriverFactory({element: button});\n        return buttonFactory.click();\n      }\n    }\n  };\n};\n\nexport default floatingTabsDriverFactory;\n"}});