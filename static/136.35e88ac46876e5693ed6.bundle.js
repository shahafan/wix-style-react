webpackJsonp([136],{1821:function(module,exports){module.exports="import React from 'react';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport {mount} from 'enzyme';\nimport {createDriverFactory} from '../test-common';\nimport tabsDriverFactory from './Tabs.driver';\nimport Tabs from './Tabs';\nimport {tabsTestkitFactory} from '../../testkit';\nimport {tabsTestkitFactory as enzymeTabsTestkitFactory} from '../../testkit/enzyme';\n\ndescribe('Tabs component', () => {\n  let items;\n  beforeEach(() => {\n    items = [{id: 0, title: 'Tab 0'}, {id: 1, title: 'Tab 1'}, {id: 2, title: 'Tab 2'}];\n  });\n\n  it('should render tabs with correct titles', () => {\n    const driver = createComponent({items});\n    const expected = items.map(item => item.title);\n\n    expect(driver.getTitles()).toEqual(expected);\n  });\n\n  it('should call onClick when tab is clicked', () => {\n    const onClick = jest.fn();\n    const driver = createComponent({items, onClick});\n\n    driver.clickTabAt(1);\n    expect(onClick).toHaveBeenCalledWith(items[1]);\n  });\n\n  it('should mark tab as active', () => {\n    const driver = createComponent({items, activeId: 2});\n    expect(driver.getActiveTabIndex()).toBe(2);\n  });\n\n  it('should change active tab', () => {\n    const driver = createComponent({items, activeId: 2});\n    driver.setProps({items, activeId: 1});\n    expect(driver.getActiveTabIndex()).toBe(1);\n  });\n\n  it('should have default type when not specified', () => {\n    const driver = createComponent({items});\n    expect(driver.isDefaultType()).toBeTruthy();\n  });\n\n  it('should get custom style', () => {\n    const type = 'compact';\n    const driver = createComponent({items, type});\n    expect(driver.isOfType('compact')).toBeTruthy();\n  });\n\n  it('should have divider by default', () => {\n    const driver = createComponent({items});\n    expect(driver.hasDivider()).toBeTruthy();\n  });\n\n  it('should not have divider if props.divider is falsy', () => {\n    const driver = createComponent({items, hasDivider: false});\n    expect(driver.hasDivider()).toBeFalsy();\n  });\n\n  it('should set tab widt, when selected type is Uniform Side', () => {\n    const width = '100px';\n    const driver = createComponent({items, width, type: 'uniformSide'});\n    expect(driver.getTabsWidth().size).toBe(1);\n    expect(driver.getTabsWidth().has(width)).toBeTruthy();\n  });\n\n  const createDriver = createDriverFactory(tabsDriverFactory);\n  function createComponent(props) {\n    return createDriver(<Tabs {...props}/>);\n  }\n\n  describe('testkit', () => {\n    it('should exist', () => {\n      const div = document.createElement('div');\n      const dataHook = 'myDataHook';\n      const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(\n        <div><Tabs items={[]} dataHook={dataHook}/></div>)\n      );\n      const breadcrumbsTestkit = tabsTestkitFactory({wrapper, dataHook});\n      expect(breadcrumbsTestkit.exists()).toBeTruthy();\n    });\n  });\n\n  describe('enzyme testkit', () => {\n    it('should exist', () => {\n      const dataHook = 'myDataHook';\n      const wrapper = mount(<Tabs items={[]} dataHook={dataHook}/>);\n      const breadcrumbsTestkit = enzymeTabsTestkitFactory({wrapper, dataHook});\n      expect(breadcrumbsTestkit.exists()).toBeTruthy();\n    });\n  });\n});\n"}});