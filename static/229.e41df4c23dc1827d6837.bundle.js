webpackJsonp([229],{1728:function(module,exports){module.exports="import React from 'react';\nimport WixComponent from '../BaseComponents/WixComponent';\nimport styles from './PopoverMenu.scss';\nimport Tooltip from '../Tooltip';\nimport Button from '../Backoffice/Button';\nimport Dots from '../Icons/dist/components/Dots';\nimport PopoverMenuItem from '../PopoverMenuItem';\nimport classNames from 'classnames';\n\nclass PopoverMenu extends WixComponent {\n\n  static propTypes = {\n    size: Tooltip.propTypes.size,\n    placement: Tooltip.propTypes.placement,\n    buttonTheme: Button.propTypes.theme,\n    maxWidth: Tooltip.propTypes.maxWidth\n  };\n\n  static defaultProps = {\n    size: 'normal',\n    placement: 'top',\n    buttonTheme: 'icon-greybackground',\n    maxWidth: '378px'\n  };\n\n  render() {\n    const menuItems = React.Children.map(this.props.children, (child, i) => {\n      if (!child) {\n        return null;\n      }\n\n      const {onClick, ...passThroughProps} = child.props;\n      const onClickWithHide = () => {\n        this.tooltip.hide();\n        onClick();\n      };\n      return <PopoverMenuItem {...passThroughProps} onClick={onClickWithHide} key={i}/>;\n    });\n\n    const assertPlacement = placement => this.props.placement === placement;\n    const className = classNames({\n      [styles.menu]: true,\n      [styles.topPlacement]: assertPlacement('top'),\n      [styles.rightPlacement]: assertPlacement('right'),\n      [styles.bottomPlacement]: assertPlacement('bottom'),\n      [styles.leftPlacement]: assertPlacement('left')\n    });\n\n    const tooltipContent = (\n      <ul className={className}>\n        {menuItems}\n      </ul>\n    );\n\n    return (\n      <Tooltip\n        ref={tooltip => {\n          this.tooltip = tooltip;\n        }}\n        placement={this.props.placement}\n        alignment=\"center\"\n        content={tooltipContent}\n        showTrigger=\"click\"\n        hideDelay={0}\n        hideTrigger=\"click\"\n        theme=\"light\"\n        size={this.props.size}\n        maxWidth={this.props.maxWidth}\n        shouldCloseOnClickOutside\n        >\n        <Button\n          type=\"button\"\n          height=\"medium\"\n          theme={this.props.buttonTheme}\n          >\n          <Dots size=\"12px\"/>\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n\nexport default PopoverMenu;\n"}});