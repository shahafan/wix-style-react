webpackJsonp([227],{1730:function(module,exports){module.exports="import React from 'react';\nimport waitForCond from 'wait-for-cond';\n\nimport popoverMenuDriverFactory from './PopoverMenu.driver';\nimport PopoverMenu from './PopoverMenu';\nimport PopoverMenuItem from '../PopoverMenuItem/PopoverMenuItem';\nimport {createDriverFactory} from '../test-common';\nimport {\n  isTestkitExists,\n  isEnzymeTestkitExists\n} from '../../testkit/test-common';\nimport {popoverMenuTestkitFactory} from '../../testkit';\nimport {popoverMenuTestkitFactory as enzymePopoverMenuTestkitFactory} from '../../testkit/enzyme';\n\nconst waitFor = fn => waitForCond.assert(fn, 5000);\n\nafterEach(() => {\n  // under the hood PopoverMenu uses Tooltip component, which renders straight into document.body\n  // thus need to keep it maintained\n  document.body.innerHTML = '';\n});\n\nconst menuItemDataHook = 'myItemDataHook';\n\ndescribe('PopoverMenu', () => {\n  const createDriver = createDriverFactory(popoverMenuDriverFactory);\n\n  it('should render trigger button', () => {\n    const driver = createDriver(\n      <PopoverMenu/>\n    );\n\n    expect(driver.exists()).toBe(true);\n  });\n\n  it('should render popover menu on trigger button click', async () => {\n    const menuItem1Text = 'Menu Item';\n    const menuItem1Listener = jest.fn();\n\n    const driver = createDriver(\n      <PopoverMenu>\n        <PopoverMenuItem\n          dataHook={menuItemDataHook}\n          text={menuItem1Text}\n          onClick={menuItem1Listener}\n          />\n        <PopoverMenuItem\n          dataHook={menuItemDataHook}\n          text=\"Menu Item #2\"\n          />\n      </PopoverMenu>\n    ).init.menuItemDataHook(menuItemDataHook);\n\n    driver.click();\n\n    await waitFor(() => {\n      expect(driver.menu.isShown()).toBe(true);\n    });\n\n    expect(driver.menu.itemsLength()).toBe(2);\n    expect(driver.menu.itemContentAt(0)).toBe(menuItem1Text);\n\n    driver.menu.clickItemAt(0);\n    expect(menuItem1Listener).toBeCalled();\n\n    await waitFor(() => {\n      expect(driver.menu.isShown()).toBe(false);\n    });\n  });\n\n  it('should not render non-existing items', async () => {\n    const driver = createDriver(\n      <PopoverMenu>\n        <PopoverMenuItem\n          dataHook={menuItemDataHook}\n          text=\"Menu Item #1\"\n          />\n        {false && (\n          <PopoverMenuItem\n            dataHook={menuItemDataHook}\n            text=\"Menu Item #2\"\n            />\n        )}\n      </PopoverMenu>\n    ).init.menuItemDataHook(menuItemDataHook);\n\n    driver.click();\n\n    await waitFor(() => {\n      expect(driver.menu.isShown()).toBe(true);\n    });\n\n    expect(driver.menu.itemsLength()).toBe(1);\n  });\n});\n\ndescribe('Testkits', () => {\n  const genPopoverMenuElement = () => (\n    <PopoverMenu>\n      <PopoverMenuItem\n        text=\"Menu Item #1\"\n        />\n      <PopoverMenuItem\n        text=\"Menu Item #2\"\n        />\n    </PopoverMenu>\n  );\n\n  it('Using ReactTestUtils testkit', () => {\n    expect(isTestkitExists(genPopoverMenuElement(), popoverMenuTestkitFactory)).toBe(true);\n  });\n\n  it('Using Enzyme testkit', () => {\n    expect(isEnzymeTestkitExists(genPopoverMenuElement(), enzymePopoverMenuTestkitFactory)).toBe(true);\n  });\n});\n"}});