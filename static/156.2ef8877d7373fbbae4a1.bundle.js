webpackJsonp([156],{1801:function(module,exports){module.exports="import React from 'react';\nimport {any, string} from 'prop-types';\nimport classNames from 'classnames';\nimport WixComponent from '../../BaseComponents/WixComponent';\nimport Button from '../Button/Button';\nimport tpaStyleInjector from '../TpaStyleInjector';\n\nlet styles = {locals: {}};\ntry {\n  styles = require('!css-loader?modules&camelCase&localIdentName=\"[path][name]__[local]__[hash:base64:5]\"!sass-loader!./FloatingTabs.scss');\n} catch (e) {\n}\n\nclass FloatingTabs extends WixComponent {\n  static propTypes = {\n    children: any,\n    tabClassName: string,\n    contentClassName: string,\n    activeTabClassName: string\n  };\n\n  static defaultProps = {\n    tabClassName: '',\n    contentClassName: '',\n    activeTabClassName: ''\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      selectedTabIndex: null\n    };\n  }\n\n  getActiveId(activeId, items) {\n    return activeId || items[0].props.id;\n  }\n\n  handleTabClick(id) {\n    this.props.onChange(id);\n  }\n\n  renderButtons() {\n    const {children, activeId, tabClassName, activeTabClassName} = this.props;\n    const childrenArray = React.Children.toArray(children);\n    const tabButtons = childrenArray.map(child => {\n      const _activeId = this.getActiveId(activeId, children);\n      const theme = (_activeId === child.props.id) ? 'fill' : 'outline';\n      const isActiveClass = (_activeId === child.props.id) ? activeTabClassName : '';\n      return (\n        <Button\n          key={child.props.id}\n          onClick={() => this.handleTabClick(child.props.id)}\n          className={classNames(styles.locals['wix-style-react-floating-tabs-button'], styles.locals['wix-style-react-floating-tabs-buttons-item'], isActiveClass, tabClassName)}\n          dataHook={`floating-tab-item-button-${child.props.id}`}\n          theme={theme}\n          >\n          {child.props.title}\n        </Button>\n      );\n    });\n    return (<div\n      className={styles.locals['wix-style-react-floating-tabs-buttons']}\n      data-hook=\"floating-tab-item-buttons\"\n      >\n      {tabButtons}\n    </div>);\n  }\n\n  renderContent() {\n    const {children, activeId, contentClassName} = this.props;\n    return React.Children.map(children, child => {\n      const _activeId = this.getActiveId(activeId, children);\n      const className = child.props.id === _activeId ? 'active' : '';\n      return (<div\n        className={classNames(className, styles.locals['wix-style-react-floating-tab-item'], contentClassName)}\n        >{child}</div>);\n    });\n  }\n  render() {\n    return (\n      <div className={styles.locals['wix-style-react-floating-tabs']}>\n        {this.renderButtons()}\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nFloatingTabs.displayName = 'FloatingTabs';\n\nexport default tpaStyleInjector(FloatingTabs, styles);\n"}});