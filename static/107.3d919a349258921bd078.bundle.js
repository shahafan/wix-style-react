webpackJsonp([107],{1850:function(module,exports){module.exports="class GoogleMapsClient {\n  constructor() {\n    this._autocomplete = new window.google.maps.places.AutocompleteService();\n    this._geocoder = new window.google.maps.Geocoder();\n  }\n\n  autocomplete({request}) {\n    return new Promise((resolve, reject) => {\n      try {\n        this._autocomplete.getPlacePredictions(request, (results, status) => {\n          if ((status !== window.google.maps.GeocoderStatus.OK) && (status !== window.google.maps.GeocoderStatus.ZERO_RESULTS)) {\n            reject({code: 'internal'});\n          } else {\n            resolve(results || []);\n          }\n        });\n      } catch (e) {\n        reject({code: 'internal', message: e.message});\n      }\n    });\n  }\n\n  geocode({request}) {\n    return new Promise((resolve, reject) => {\n      try {\n        this._geocoder.geocode(request, (results, status) => {\n          if ((status !== window.google.maps.GeocoderStatus.OK) && (status !== window.google.maps.GeocoderStatus.ZERO_RESULTS)) {\n            reject({code: 'internal'});\n          } else {\n            resolve(results || []);\n          }\n        });\n      } catch (e) {\n        reject({code: 'internal', message: e.message});\n      }\n    });\n  }\n}\n\nexport default GoogleMapsClient;\n"}});