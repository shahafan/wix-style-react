webpackJsonp([262],{1695:function(module,exports){module.exports="import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport styles from './MessageBoxFunctionalLayout.scss';\n\nconst messageBoxFunctionalLayoutDriverFactory = ({element, wrapper, component}) => {\n  const confirmationButton = () => element.querySelector('[data-hook=\"confirmation-button\"]');\n  const cancellationButton = () => element.querySelector('[data-hook=\"cancellation-button\"]');\n  const headerCloseButton = () => element.querySelector('[data-hook=\"header-close-button\"]');\n  const body = () => element.querySelector('[data-hook=\"message-box-body\"]');\n\n  return {\n    exists: () => !!(element),\n    getConfirmationButtonText: () => confirmationButton().textContent,\n    clickOnConfirmationButton: () => ReactTestUtils.Simulate.click(confirmationButton()),\n    getConfirmationButton: confirmationButton,\n    getCancellationButton: cancellationButton,\n    getHeaderCloseButton: headerCloseButton,\n    getCancellationButtonText: () => cancellationButton().textContent,\n    clickOnCancellationButton: () => ReactTestUtils.Simulate.click(cancellationButton()),\n    clickOnHeaderCloseButton: () => ReactTestUtils.Simulate.click(headerCloseButton()),\n    isThemeExist: theme => !!element.querySelector(`.${theme}`),\n    getFooter: () => element.querySelector('[data-hook=\"message-box-footer\"]'),\n    getTitle: () => element.querySelector('[data-hook=\"header-layout-title\"]').textContent,\n    getChildBySelector: selector => element.querySelector(selector),\n    isCancelEnable: () => cancellationButton().className.indexOf('disabled') === -1,\n    isConfirmationEnable: () => confirmationButton().className.indexOf('disabled') === -1,\n    setProps: props => {\n      const ClonedWithProps = React.cloneElement(component, Object.assign({}, component.props, props), ...(component.props.children || []));\n      ReactDOM.render(<div ref={r => element = r}>{ClonedWithProps}</div>, wrapper);\n    },\n    toHaveBodyPadding: () => body().classList.contains(`${styles.withPadding}`)\n  };\n};\n\nexport default messageBoxFunctionalLayoutDriverFactory;\n"}});