webpackJsonp([253],{1704:function(module,exports){module.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactModal from 'react-modal';\nimport classnames from 'classnames';\nimport styles from './Modal.scss';\nimport {colors, positions} from './ModalConstants';\nimport WixComponent from '../BaseComponents/WixComponent';\n\nclass Modal extends WixComponent {\n  static propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    contentLabel: PropTypes.string.isRequired,\n    theme: PropTypes.oneOf(Object.keys(colors)),\n    children: PropTypes.any,\n    zIndex: PropTypes.number,\n    shouldCloseOnOverlayClick: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    onAfterOpen: PropTypes.func,\n    horizontalPosition: PropTypes.oneOf(Object.keys(positions)),\n    verticalPosition: PropTypes.oneOf(Object.keys(positions)),\n    closeTimeoutMS: PropTypes.number,\n    scrollable: PropTypes.bool,\n    scrollableContent: PropTypes.bool,\n    maxHeight: PropTypes.string,\n    height: PropTypes.string\n  }\n\n  static defaultProps = {\n    onOk: () => { },\n    borderRadius: 0,\n    theme: colors.blue,\n    shouldCloseOnOverlayClick: false,\n    horizontalPosition: 'center',\n    verticalPosition: 'center',\n    closeTimeoutMS: 500,\n    scrollable: true,\n    scrollableContent: false,\n    height: 'auto',\n    maxHeight: 'auto'\n  }\n\n  render() {\n    const {\n      horizontalPosition,\n      verticalPosition,\n      height,\n      maxHeight,\n      scrollableContent,\n      borderRadius,\n      zIndex,\n      scrollable,\n      theme,\n      isOpen,\n      shouldCloseOnOverlayClick,\n      onRequestClose,\n      onAfterOpen,\n      contentLabel,\n      closeTimeoutMS,\n      children\n    } = this.props;\n\n    const justifyContent = positions[horizontalPosition];\n    const alignItems = positions[verticalPosition];\n    const customMaxHeight = scrollableContent && maxHeight === 'auto' ? '100vh' : maxHeight;\n\n    const modalStyles = {\n      overlay: {\n        // Overriding defaults\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 11 + (zIndex || 0),\n        backgroundColor: null, // null disables the property, use css instead\n        // Overriding defaults - END\n        display: 'flex',\n        justifyContent,\n        alignItems,\n        overflowY: scrollable ? 'auto' : 'hidden'\n      },\n      content: {\n        // Overriding defaults\n        border: 'none',\n        overflowY: scrollableContent ? 'auto' : 'initial',\n        overflowX: scrollableContent ? 'hidden' : 'initial',\n        height,\n        customMaxHeight,\n        WebkitOverflowScrolling: 'touch',\n        outline: 'none',\n        borderRadius,\n        padding: '0px',\n        boxShadow: '0 0 14px 0 rgba(22, 45, 60, 0.3)',\n        // Overriding defaults - END\n        backgroundColor: 'transparent',\n        marginBottom: '0px'\n      }\n    };\n\n    const modalClasses = `${styles.modal} ${styles[theme]}`;\n    const portalClassName = classnames(styles.portal, {\n      [styles.portalNonScrollable]: !scrollable\n    });\n\n    return (\n      <ReactModal\n        portalClassName={portalClassName}\n        isOpen={isOpen}\n        shouldCloseOnOverlayClick={shouldCloseOnOverlayClick}\n        onRequestClose={onRequestClose}\n        onAfterOpen={onAfterOpen}\n        style={modalStyles}\n        className={modalClasses}\n        contentLabel={contentLabel}\n        closeTimeoutMS={closeTimeoutMS}\n        >\n        {children}\n      </ReactModal>\n    );\n  }\n}\n\nexport default Modal;\n"}});