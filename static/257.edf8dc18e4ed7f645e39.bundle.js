webpackJsonp([257],{1700:function(module,exports){module.exports="import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactTestUtils from 'react-dom/test-utils';\n\nconst messageBoxMarketerialLayoutDriverFactory = ({element, wrapper, component}) => {\n  const primaryButton = () => element.querySelector('[data-hook=\"primary-button\"]');\n  const secondaryButton = () => element.querySelector('[data-hook=\"secondary-button\"]');\n  const closeButton = () => element.querySelector('[data-hook=\"close-button\"]');\n\n  return {\n    exists: () => !!(element),\n    getPrimaryButtonText: () => primaryButton().textContent,\n    getPrimaryButton: primaryButton,\n    getSecondaryButtonText: () => secondaryButton().textContent,\n    getSecondaryButton: secondaryButton,\n    clickOnPrimaryButton: () => ReactTestUtils.Simulate.click(primaryButton()),\n    clickOnSecondaryButton: () => ReactTestUtils.Simulate.click(secondaryButton()),\n    closeMessageBox: () => ReactTestUtils.Simulate.click(closeButton()),\n    getTitle: () => element.querySelector('[data-hook=\"message-box-title\"]').textContent,\n    getContentBySelector: selector => element.querySelector(selector),\n    getImageSrc: () => element.querySelector('[data-hook=\"header-image\"]').src,\n    setProps: props => {\n      const ClonedWithProps = React.cloneElement(component, Object.assign({}, component.props, props), ...(component.props.children || []));\n      ReactDOM.render(<div ref={r => element = r}>{ClonedWithProps}</div>, wrapper);\n    }\n  };\n};\n\nexport default messageBoxMarketerialLayoutDriverFactory;\n"}});