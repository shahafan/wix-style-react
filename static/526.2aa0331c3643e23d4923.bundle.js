webpackJsonp([526],{1431:function(module,exports){module.exports="import React from 'react';\nimport textLinkDriverFactory from './TextLink.driver';\nimport TextLink from './TextLink';\nimport {createDriverFactory} from '../test-common';\nimport {textLinkTestkitFactory} from '../../../testkit';\nimport {textLinkTestkitFactory as enzymeTextLinkTestkitFactory} from '../../../testkit/enzyme';\nimport {isTestkitExists, isEnzymeTestkitExists} from '../../../testkit/test-common';\nimport {spy} from 'sinon';\n\ndescribe('TextLink', () => {\n\n  const createDriver = createDriverFactory(textLinkDriverFactory);\n\n  it('should have a textLink', () => {\n    const driver = createDriver(<TextLink link=\"\"/>);\n\n    expect(driver.exists()).toBeTruthy();\n  });\n\n  it('should render children', () => {\n    const children = '<div>123</div>';\n    const driver = createDriver(<TextLink link=\"\">{children}</TextLink>);\n\n    expect(driver.getContent()).toBe(children);\n  });\n\n  it('should be with medium size by defualt', () => {\n    const driver = createDriver(<TextLink link=\"\"/>);\n    expect(driver.getSize()).toBe('medium');\n  });\n\n  it('should be with small size', () => {\n    const driver = createDriver(<TextLink link=\"\" size=\"small\"/>);\n    expect(driver.getSize()).toBe('small');\n  });\n\n  it('should be with dark background', () => {\n    const driver = createDriver(<TextLink link=\"\" darkBackground size=\"small\"/>);\n    expect(driver.isDarkBackground()).toBeTruthy();\n  });\n\n  it('should be with light background', () => {\n    const driver = createDriver(<TextLink link=\"\" size=\"small\"/>);\n    expect(driver.isLightBackground()).toBeTruthy();\n  });\n\n  it('should be with underline', () => {\n    const driver = createDriver(<TextLink link=\"\" underlineStyle=\"always\"/>);\n    expect(driver.isUnderline()).toBeTruthy();\n  });\n\n  it('should not be with underline', () => {\n    const driver = createDriver(<TextLink link=\"\" underlineStyle=\"never\"/>);\n    driver.hover();\n    expect(driver.isUnderline()).toBeFalsy();\n  });\n\n  it('should not be with underline by defualt', () => {\n    const driver = createDriver(<TextLink link=\"\"/>);\n    expect(driver.isUnderline()).toBeFalsy();\n  });\n\n  it('should have underline on hover', () => {\n    const driver = createDriver(<TextLink link=\"\"/>);\n    driver.hover();\n    expect(driver.isUnderline()).toBeTruthy();\n  });\n\n  it('should have a link', () => {\n    const driver = createDriver(<TextLink link=\"https://www.wix.com\"/>);\n    expect(driver.getLink()).toBe('https://www.wix.com/');\n  });\n\n  it('should have a rel', () => {\n    const driver = createDriver(<TextLink rel=\"bookmark\" target=\"_blank\" link=\"https://www.wix.com\"/>);\n    expect(driver.getRel()).toBe('bookmark');\n  });\n\n  it('should have a target', () => {\n    const driver = createDriver(<TextLink target=\"_blank\" link=\"https://www.wix.com\"/>);\n    expect(driver.getTarget()).toBe('_blank');\n  });\n\n  it('should call the onClick func when clicked', () => {\n    const onClickFunc = spy();\n    const driver = createDriver(<TextLink link=\"\" onClick={onClickFunc}/>);\n\n    driver.click();\n\n    expect(onClickFunc.calledOnce).toEqual(true);\n  });\n\n  it('should not call the onClick func if clicked when disabled', () => {\n    const onClickFunc = spy();\n    const driver = createDriver(<TextLink disabled link=\"\" onClick={onClickFunc}/>);\n\n    driver.click();\n\n    expect(onClickFunc.called).toEqual(false);\n  });\n});\n\ndescribe('testkit', () => {\n  it('should exist', () => {\n    expect(isTestkitExists(<TextLink link=\"\"/>, textLinkTestkitFactory)).toBe(true);\n  });\n});\n\ndescribe('enzyme testkit', () => {\n  it('should exist', () => {\n    expect(isEnzymeTestkitExists(<TextLink link=\"\"/>, enzymeTextLinkTestkitFactory)).toBe(true);\n  });\n\n  it('should not exist', () => {\n    expect(isEnzymeTestkitExists(<TextLink link=\"\"/>, enzymeTextLinkTestkitFactory, {withoutDataHook: true})).toBe(false);\n  });\n});\n"}});