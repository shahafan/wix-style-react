webpackJsonp([211],{1746:function(module,exports){module.exports="import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Tooltip from '../Tooltip';\nimport Bold from './../Icons/dist/components/Bold';\nimport Italic from './../Icons/dist/components/Italic';\nimport Underline from './../Icons/dist/components/Underline';\nimport UnorderedList from './../Icons/dist/components/UnorderedList';\nimport OrderedList from './../Icons/dist/components/OrderedList';\nimport Link from './../Icons/dist/components/Link';\nimport Image from './../Icons/dist/components/Image';\nimport styles from './RichTextAreaButton.scss';\n\nconst buttons = {\n  bold: {\n    icon: Bold,\n    tooltipText: 'Bold',\n    size: 30\n  },\n  italic: {\n    icon: Italic,\n    tooltipText: 'Italic',\n    size: 30\n  },\n  underline: {\n    icon: Underline,\n    tooltipText: 'Underline',\n    size: 30\n  },\n  'unordered-list': {\n    icon: UnorderedList,\n    tooltipText: 'Bulletted list',\n    size: 30\n  },\n  'ordered-list': {\n    icon: OrderedList,\n    tooltipText: 'Numbered list',\n    size: 30\n  },\n  link: {\n    icon: Link,\n    tooltipText: 'Link',\n    size: 30\n  },\n  image: {\n    icon: Image,\n    tooltipText: 'Image',\n    size: 14\n  }\n};\n\nclass RichTextAreaButton extends Component {\n  handleMouseDown = event => {\n    event.preventDefault();\n    if (!this.props.disabled) {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const {type, isActive, isTooltipDisabled, disabled} = this.props;\n    const tooltipContent = <p className={styles.tooltipContent}>{buttons[type].tooltipText}</p>;\n    const className = classNames(styles.button, {\n      [styles.isActive]: isActive,\n      [styles.disabled]: disabled\n    });\n    return (\n      <Tooltip\n        appendToParent\n        content={tooltipContent}\n        overlay=\"\"\n        theme=\"dark\"\n        alignment=\"center\"\n        moveBy={{x: 2, y: 2}}\n        hideDelay={0}\n        disabled={isTooltipDisabled}\n        >\n        <button\n          className={className}\n          onMouseDown={this.handleMouseDown}\n          data-hook={`rich-text-area-button-${type}`}\n          >\n          <span className={styles.wrapper}>\n            {this.renderIcon()}\n          </span>\n        </button>\n      </Tooltip>\n    );\n  }\n\n  renderIcon() {\n    const {icon: Icon, size} = buttons[this.props.type];\n    return <Icon size={`${size}px`}/>;\n  }\n}\n\nRichTextAreaButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  isActive: PropTypes.bool,\n  isTooltipDisabled: PropTypes.bool,\n  disabled: PropTypes.bool\n};\n\nexport default RichTextAreaButton;\n"}});