webpackJsonp([501],{1456:function(module,exports){module.exports="import React from 'react';\nimport {bool, func, node, oneOf, string} from 'prop-types';\nimport styles from './ButtonHeader.scss';\nimport classNames from 'classnames';\nimport Button from '../../../src/Backoffice/Button';\nimport WixComponent from '../../BaseComponents/WixComponent';\n\nclass ButtonHeader extends WixComponent {\n\n  static propTypes = {\n    title: node.isRequired,\n    buttonTitle: string.isRequired,\n    buttonOnClick: func.isRequired,\n    buttonPrefix: node,\n    buttonSuffix: node,\n    subtitle: node,\n    tooltip: node,\n    theme: oneOf([\n      'standard',\n      'fullblue'\n    ]),\n    withoutDivider: bool\n  };\n\n  static defaultProps = {\n    subtitle: null,\n    withoutDivider: false,\n    buttonPrefix: null,\n    tooltip: null,\n    theme: 'standard',\n    buttonSuffix: null\n  };\n\n  render() {\n    const {title, subtitle, buttonOnClick, buttonTitle, buttonPrefix, buttonSuffix, withoutDivider, tooltip, theme} = this.props;\n\n    const headerClasses = classNames({\n      [styles.headerOnlyTitle]: !subtitle,\n      [styles.headerTitleSubtitle]: subtitle,\n      [styles.withDivider]: !withoutDivider\n    });\n\n    const buttonClass = classNames({\n      [styles.button]: theme === 'standard',\n      [styles.buttonSmall]: theme === 'fullblue'\n    });\n\n    const height = theme === 'standard' ? 'medium' : 'small';\n    const buttonTheme = theme === 'standard' ? 'whiteblueprimary' : 'fullblue';\n\n    const buttonElement = (\n      <div className={buttonClass}>\n        <Button\n          dataHook=\"button\"\n          height={height}\n          suffixIcon={buttonSuffix}\n          prefixIcon={buttonPrefix}\n          onClick={buttonOnClick}\n          theme={buttonTheme}\n          >\n          {buttonTitle}\n        </Button>\n      </div>\n    );\n\n    const tooltipElement = tooltip ? (\n        React.cloneElement(tooltip, {}, buttonElement)\n      ) : null;\n\n    const actionElement = tooltipElement ? tooltipElement : buttonElement;\n\n    const titleElement = (\n      <div data-hook=\"title\" className={styles.title}>\n        {title}\n      </div>\n    );\n\n    const subtitleElement = subtitle ? (\n      <div data-hook=\"subtitle\" className={styles.subtitle}>\n        {this.props.subtitle}\n      </div>\n    ) : null;\n\n    return (\n      <div className={headerClasses}>\n        <div>\n          {titleElement}\n          {subtitleElement}\n        </div>\n        {actionElement}\n      </div>\n    );\n  }\n}\n\nexport default ButtonHeader;\n"}});