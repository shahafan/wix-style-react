webpackJsonp([467],{1490:function(module,exports){module.exports="import React from 'react';\nimport FieldWithSelectionComposite from './FieldWithSelectionComposite';\nimport Label from '../../Label';\nimport Input from '../../Input';\nimport InputArea from '../../InputArea';\nimport Checkbox from '../../Checkbox';\nimport FieldWithSelectionCompositeDriverFactory from './FieldWithSelectionComposite.driver';\nimport {createDriverFactory} from '../../test-common';\n\ndescribe('FieldWithSelectionComposite', () => {\n  const createCompositeDriverFactory = createDriverFactory(FieldWithSelectionCompositeDriverFactory);\n\n  it('should remove label wrapping when label not given', () => {\n    const driver = createCompositeDriverFactory(<FieldWithSelectionComposite><Input/><Checkbox/></FieldWithSelectionComposite>);\n    expect(driver.hasLabel()).toBe(false);\n    expect(driver.getNumberOfChildren()).toBe(1);\n    expect(driver.hasInput()).toBe(true);\n    expect(driver.hasSelectionInput()).toBe(true);\n  });\n\n  it('should render Label with Input', () => {\n    const driver = createCompositeDriverFactory(<FieldWithSelectionComposite><Label>myLabel</Label><Input/><Checkbox/></FieldWithSelectionComposite>);\n    expect(driver.hasLabel()).toBe(true);\n    expect(driver.getLabel()).toBe('myLabel');\n    expect(driver.hasInput()).toBe(true);\n    expect(driver.hasSelectionInput()).toBe(true);\n  });\n\n  it('should render Label with InputArea', () => {\n    const driver = createCompositeDriverFactory(<FieldWithSelectionComposite><Label/><InputArea/><Checkbox/></FieldWithSelectionComposite>);\n    expect(driver.hasLabel()).toBe(true);\n    expect(driver.hasInput()).toBe(true);\n    expect(driver.hasSelectionInput()).toBe(true);\n  });\n\n  describe('input properties', () => {\n    it('should verify that onBlur callback was called', () => {\n      const onBlur = jest.fn();\n      const driver = createCompositeDriverFactory(<FieldWithSelectionComposite><Label/><Input onBlur={onBlur}/><Checkbox/></FieldWithSelectionComposite>);\n      driver.triggerInputBlur();\n      expect(onBlur).toHaveBeenCalled();\n    });\n  });\n\n  describe('label attributes', () => {\n    it('should FieldLabelAttributes not exists if all attributes empty or false', () => {\n      const driver = createCompositeDriverFactory(<FieldWithSelectionComposite><Label/><InputArea/><Checkbox/></FieldWithSelectionComposite>);\n\n      expect(driver.hasFieldLabelAttributes()).toBe(false);\n    });\n\n    it('should FieldLabelAttributes exists if required', () => {\n      const driver = createCompositeDriverFactory(<FieldWithSelectionComposite required><Label/><InputArea/><Checkbox/></FieldWithSelectionComposite>);\n\n      expect(driver.hasFieldLabelAttributes()).toBe(true);\n    });\n\n    it('should FieldLabelAttributes exists if info', () => {\n      const driver = createCompositeDriverFactory(<FieldWithSelectionComposite info=\"info\"><Label/><InputArea/><Checkbox/></FieldWithSelectionComposite>);\n\n      expect(driver.hasFieldLabelAttributes()).toBe(true);\n    });\n  });\n});\n"}});