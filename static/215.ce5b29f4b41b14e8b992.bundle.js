webpackJsonp([215],{1742:function(module,exports){module.exports="import React from 'react';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport Range from './Range';\nimport Input from '../Input';\nimport Label from '../Label';\n\nimport {rangeTestkitFactory} from '../../testkit';\nimport {rangeTestkitFactory as enzymeRangeTestkitFactory} from '../../testkit/enzyme';\nimport {mount} from 'enzyme';\n\ndescribe('Range', () => {\n  describe('testkit', () => {\n    it('should exist', () => {\n      const div = document.createElement('div');\n      const dataHook = 'compHook';\n      const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(<div><Range dataHook={dataHook}><Label/><Input/><Input/></Range></div>));\n      const rangeTestkit = rangeTestkitFactory({wrapper, dataHook});\n      expect(rangeTestkit.exists()).toBeTruthy();\n    });\n\n    it('should exist without label', () => {\n      const div = document.createElement('div');\n      const dataHook = 'compHook';\n      const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(<div><Range dataHook={dataHook}><Input/><Input/></Range></div>));\n      const rangeTestkit = rangeTestkitFactory({wrapper, dataHook});\n      expect(rangeTestkit.exists()).toBeTruthy();\n    });\n\n    describe('enzyme testkit', () => {\n      it('should exist', () => {\n        const dataHook = 'myDataHook';\n        const wrapper = mount(<div><Range dataHook={dataHook}><Label/><Input/><Input/></Range></div>);\n        const textFieldTestkit = enzymeRangeTestkitFactory({wrapper, dataHook});\n        expect(textFieldTestkit.exists()).toBeTruthy();\n      });\n\n      it('should exist without label', () => {\n        const div = document.createElement('div');\n        const dataHook = 'compHook';\n        const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(<div><Range dataHook={dataHook}><Input/><Input/></Range></div>));\n        const rangeTestkit = rangeTestkitFactory({wrapper, dataHook});\n        expect(rangeTestkit.exists()).toBeTruthy();\n      });\n    });\n  });\n});\n"}});