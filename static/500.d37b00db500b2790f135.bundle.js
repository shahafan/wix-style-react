webpackJsonp([500],{1457:function(module,exports){module.exports="import React from 'react';\nimport ReactTestUtils from 'react-dom/test-utils';\nimport buttonHeaderDriverFactory from './ButtonHeader.driver';\nimport {createDriverFactory} from '../../test-common';\nimport ButtonHeader from './ButtonHeader';\nimport {buttonTestkitFactory, buttonHeaderTestkitFactory} from '../../../testkit';\nimport {buttonHeaderTestkitFactory as enzymeButtonHeaderTestkitFactory} from '../../../testkit/enzyme';\nimport {mount} from 'enzyme';\n\ndescribe('ButtonHeader', () => {\n  const createDriver = createDriverFactory(buttonHeaderDriverFactory);\n\n  it('should have a title', () => {\n    const driver = createDriver(<ButtonHeader buttonOnClick={() => {}} buttonTitle=\"Click me\" title=\"Header Title\"/>);\n    expect(driver.title()).toBe('Header Title');\n  });\n\n  it('should have a subtitle', () => {\n    const driver = createDriver(<ButtonHeader buttonOnClick={() => {}} buttonTitle=\"Click me\" subtitle=\"Header Subtitle\" title=\"Header Title\"/>);\n    expect(driver.subtitle()).toBe('Header Subtitle');\n  });\n\n  it('should have a button testKit', () => {\n    const driver = createDriver(<ButtonHeader buttonOnClick={() => {}} buttonTitle=\"Click me\" subtitle=\"Header Subtitle\" title=\"Header Title\"/>);\n    const buttonDriverTestkit = buttonTestkitFactory({wrapper: driver.element(), dataHook: driver.buttonDataHook()});\n    expect(buttonDriverTestkit.getButtonTextContent()).toBe('Click me');\n  });\n\n  describe('testkit', () => {\n    it('should exist', () => {\n      const div = document.createElement('div');\n      const dataHook = 'myDataHook';\n      const wrapper = div.appendChild(ReactTestUtils.renderIntoDocument(<div><ButtonHeader buttonOnClick={() => {}} buttonTitle=\"Click me\" title=\"Header Title\" dataHook={dataHook}/></div>));\n      const buttonHeaderTestkit = buttonHeaderTestkitFactory({wrapper, dataHook});\n      expect(buttonHeaderTestkit.exists()).toBeTruthy();\n    });\n  });\n\n  describe('enzyme testkit', () => {\n    it('should exist', () => {\n      const dataHook = 'myDataHook';\n      const wrapper = mount(<ButtonHeader buttonOnClick={() => {}} buttonTitle=\"Click me\" title=\"Header title\" dataHook={dataHook}/>);\n      const buttonDriverTestkit = enzymeButtonHeaderTestkitFactory({wrapper, dataHook});\n      expect(buttonDriverTestkit.exists()).toBeTruthy();\n    });\n  });\n});\n"}});